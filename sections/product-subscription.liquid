{% schema %}
{
  "name": "Subscription Block",
  "blocks": [
    {
      "type": "subscription_option",
      "name": "Plan Option",
      "settings": [
        {
          "type": "text",
          "id": "plan_label",
          "label": "Plan Label (e.g., Single Subscription)"
        },
        {
          "type": "text",
          "id": "plan_price",
          "label": "Plan Price (e.g., ₹10)"
        },
        {
          "type": "text",
          "id": "plan_key",
          "label": "Plan Key (e.g., single, double, try)"
        },
        {
          "type": "text",
          "id": "selling_plan_id",
          "label": "Selling Plan ID"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Product Subscription Block",
      "blocks": [
        {
          "type": "subscription_option",
          "settings": {
            "plan_label": "Single Subscription",
            "plan_price": "₹10",
            "plan_key": "single",
            "selling_plan_id": "123456789"
          }
        },
        {
          "type": "subscription_option",
          "settings": {
            "plan_label": "Double Subscription",
            "plan_price": "₹20",
            "plan_key": "double",
            "selling_plan_id": "234567890"
          }
        },
        {
          "type": "subscription_option",
          "settings": {
            "plan_label": "Try Once",
            "plan_price": "₹5",
            "plan_key": "try",
            "selling_plan_id": "345678901"
          }
        }
      ]
    }
  ]
}
{% endschema %}

<div id="subscription-block">
  <h3>Select Your Plan</h3>
  <div class="radio-group">
    {% for block in section.blocks %}
      <label>
        <input type="radio" name="plan_type" value="{{ block.settings.plan_key }}" data-plan-id="{{ block.settings.selling_plan_id }}">
        {{ block.settings.plan_label }} – {{ block.settings.plan_price }}
      </label>
    {% endfor %}
  </div>

  <div id="flavor-section"></div>
  <div id="includes-section"></div>
  <input type="hidden" id="selected-selling-plan" name="selling_plan" value="">
</div>

<script>
  const flavorData = {
    chocolate: {
      label: "Chocolate",
      image: "{{ product.metafields.flavors.chocolate_image | image_url }}"
    },
    vanilla: {
      label: "Vanilla",
      image: "{{ product.metafields.flavors.vanilla_image | image_url }}"
    },
    orange: {
      label: "Orange",
      image: "{{ product.metafields.flavors.orange_image | image_url }}"
    }
  };

  const renderFlavorOptions = (nameAttr) => `
    <div class="flavor-options">
      ${Object.entries(flavorData).map(([key, data]) => `
        <label>
          <input type="radio" name="${nameAttr}" value="${key}">
          <img src="${data.image}" alt="${data.label}" width="80">
          <div>${data.label}</div>
        </label>
      `).join('')}
    </div>
  `;

  const renderIncludes = (planType) => {
    const bullets = {
      single: `{{ product.metafields.includes.single_plan_bullets | escape | newline_to_br }}`,
      double: `{{ product.metafields.includes.double_plan_bullets | escape | newline_to_br }}`,
      try: `{{ product.metafields.includes.try_once_bullets | escape | newline_to_br }}`
    };
    if (!bullets[planType]) return '';
    return `<h4>What’s Included</h4><ul>${bullets[planType].split('<br />').map(item => `<li>${item}</li>`).join('')}</ul>`;
  };

  const flavorSection = document.getElementById("flavor-section");
  const includesSection = document.getElementById("includes-section");
  const sellingPlanInput = document.getElementById("selected-selling-plan");

  document.querySelectorAll('input[name="plan_type"]').forEach(input => {
    input.addEventListener('change', (e) => {
      const planKey = e.target.value;
      const sellingPlanId = e.target.dataset.planId;

      sellingPlanInput.value = sellingPlanId;

      if (planKey === 'single') {
        flavorSection.innerHTML = renderFlavorOptions("flavor_single");
      } else if (planKey === 'double') {
        flavorSection.innerHTML = `
          <h4>Flavor 1</h4>${renderFlavorOptions("flavor1")}
          <h4>Flavor 2</h4>${renderFlavorOptions("flavor2")}
        `;
      } else if (planKey === 'try') {
        flavorSection.innerHTML = `
          <label><input type="radio" name="try_type" value="try_single" checked> Single</label>
          <label><input type="radio" name="try_type" value="try_double"> Double</label>
          <div id="try-flavors"></div>
        `;

        const tryFlavors = document.getElementById("try-flavors");
        const renderTrySingle = () => {
          tryFlavors.innerHTML = renderFlavorOptions("try_flavor_single");
        };
        const renderTryDouble = () => {
          tryFlavors.innerHTML = `
            <h4>Flavor 1</h4>${renderFlavorOptions("try_flavor1")}
            <h4>Flavor 2</h4>${renderFlavorOptions("try_flavor2")}`;
        };

        document.querySelectorAll('input[name="try_type"]').forEach(radio => {
          radio.addEventListener('change', (e) => {
            if (e.target.value === 'try_single') renderTrySingle();
            else renderTryDouble();
          });
        });

        renderTrySingle();
      }

      includesSection.innerHTML = renderIncludes(planKey);

      // Hide quantity input if exists
      const qty = document.querySelector('.product-form__quantity');
      if (qty) qty.style.display = 'none';
    });
  });

  // Trigger default
  document.querySelector('input[name="plan_type"]:checked').dispatchEvent(new Event('change'));
</script>

<style>
  .radio-group label {
    display: block;
    margin-bottom: 10px;
  }
  .flavor-options {
    display: flex;
    gap: 15px;
    margin-top: 10px;
  }
  .flavor-options label {
    text-align: center;
  }
  .flavor-options img {
    border-radius: 6px;
    width: 80px;
  }
</style>
